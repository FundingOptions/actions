name: 'AWS Credentials'
author: 'Funding Options'
description: 'Load up AWS Credentials (defaults to deployment usage)'

inputs:
  region:
    description: The AWS region to use
    default: eu-west-1
    required: false

  # Funding Options style, everything has standardised naming
  stage:
    description: The stage to use
    default: dev
    required: true

  service:
    description: The service name you're trying to access the role for
    required: true

  action:
    description: The action you're trying to access the role for
    default: deploy
    required: true

  # TODO: migrate to OIDC once it's stable + time permitting
  aws-access-key-id:
    description: The AWS access key ID
    required: true
  secret-access-key:
    description: The AWS access key to use
    required: true

  session-duration:
    description: The duration of the AWS session
    default: '1200'  # 20 minutes
    required: false

  role-to-assume:
    description: The role to assume
    default: ''
    required: false

  session-name:
    description: The name to tag the created session with
    default: ''
    required: false

runs:
  using: composite
  steps:
    - uses: actions/github-script@v5
      name: build inputs
      id: dynamic-inputs
      with:
        result-encoding: json
        script: |
          // configure default inputs
          return {
            roleToAssume: '${{ inputs.role-to-assume }}' || 'fo-${{ inputs.stage }}-${{ inputs.service }}-${{ inputs.action }}',
            sessionName: '${{ inputs.session-name }}' || 'github-${{ inputs.stage }}-${{ inputs.action }}-${{ github.run_id }}',
          }

    - uses: aws-actions/configure-aws-credentials@v4
      name: Login
      with:
        aws-access-key-id: "${{ inputs.aws-access-key-id }}"
        aws-secret-access-key: "${{ inputs.secret-access-key }}"
        aws-region: '${{ inputs.region }}'
        role-to-assume: '${{ fromJSON(steps.dynamic-inputs.outputs.result).roleToAssume }}'
        role-duration-seconds: '${{ inputs.session-duration }}'
        role-session-name: '${{ fromJSON(steps.dynamic-inputs.outputs.result).sessionName }}'
